#include <iostream>
using namespace std;

void Merge(int A[], int l, int m, int h) {
    int n1 = m - l + 1; // 왼쪽 부분 배열의 크기
    int n2 = h - m;     // 오른쪽 부분 배열 크기

    // 임시 배열에 값을 복사
    int left[n1], right[n2];

    // 왼쪽 배열의 값 복사
    for (int i = 0; i < n1; i++)
        left[i] = A[l + i];

    // 오른쪽 배열의 값 복사
    for (int i = 0; i < n2; i++)
        right[i] = A[m + 1 + i];

    // 두 배열의 병합
    int i = 0, j = 0, k = l;
    while (i < n1 && j < n2) {
        if (left[i] <= right[j]) {
            A[k] = left[i];
            i++;
        } else {
            A[k] = right[j];
            j++;
        }
        k++;
    }

    // 남은 요소 복사
    while (i < n1) {
        A[k] = left[i];
        i++;
        k++;
    }
    while (j < n2) {
        A[k] = right[j];
        j++;
        k++;
    }
}

// Merge Sort 함수, 배열 A[l..h]를 정렬
void MS(int A[], int l, int h) {
    if (l < h) {
        int m = l + (h - l) / 2; // 중간 지점 계산
        MS(A, l, m);              // 왼쪽 절반 정렬
        MS(A, m + 1, h);          // 오른쪽 절반 정렬
        Merge(A, l, m, h);        // 병합
    }
}

int main() {
    int A[] = {3, 2, 5, 7, 4, 8, 6, 9, 1};
    int n = sizeof(A) / sizeof(A[0]);

    cout << "정렬 전 배열: ";
    for (int i = 0; i < n; i++)
        cout << A[i] << " ";
    cout << endl;

    MS(A, 0, n - 1); // 배열을 0부터 n-1까지 정렬

    cout << "정렬 후 배열: ";
    for (int i = 0; i < n; i++)
        cout << A[i] << " ";
    cout << endl;

    return 0;
}
